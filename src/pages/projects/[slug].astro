---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Prose from '../../components/Prose.astro';
import { Image } from 'astro:assets';
import Gallery from '../../components/Gallery';

export const getStaticPaths = async () => {
	const projects = await getCollection('projects');
	const paths = projects.map((project: CollectionEntry<'projects'>) => ({
		params: {
			slug: project.slug
		},
		props: {
			project
		}
	}));
	return paths;
};

type Props = {
	project: CollectionEntry<'projects'>;
};

const { project } = Astro.props;
const { Content } = await project.render();
---

<Layout title={`Projects | ${project.data.title}`}>
	<div class="mb-8">
		<div class="flex gap-2">
			{
				project.data.category.map((category) => (
					<span class="text-xs font-light text-zinc-400">{category}</span>
				))
			}
		</div>
		<span class="mb-4 flex items-center gap-4"
			><h1 class="text-3xl font-bold">{project.data.title}</h1>{
				project.data.image !== null && project.data.image !== undefined && (
					<Image
						src={project.data.image}
						alt={project.data.title}
						width={40}
						height={40}
						class={'rounded-full'}
					/>
				)
			}</span
		>
		<p class="text-sm font-light text-zinc-400">
			Published {new Date(project.data.date).toLocaleDateString('de-DE')}
		</p>
	</div>
	<Prose>
		<Content />
	</Prose>
	{
		project.data.gallery && (
			<div class="hidden lg:block">
				<h1 class="mt-8 text-2xl font-bold">Gallery</h1>
				<Gallery images={project.data.gallery} client:visible />
			</div>
		)
	}
</Layout>
